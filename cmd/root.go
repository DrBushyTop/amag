/*
Copyright Â© 2024 NAME HERE <EMAIL ADDRESS>
*/
package cmd

import (
	"os"

	"github.com/spf13/cobra"
)

// rootCmd represents the base command when called without any subcommands
var rootCmd = &cobra.Command{
	Use:   "amag",
	Short: "Amag is a tool for aggregating metrics from Kusto Query Language files as custom metrics in Azure Monitor",
	Long: `Amag is a tool for aggregating metrics from Kusto Query Language files as custom metrics in Azure Monitor. 
	It can be used to run a given KQL query and save the MetricValue property generated by the result into a given custom metric name.
	
	The tool is designed to be used in conjunction with Azure Identity, and handles authentication using DefaultAzureCredential.
	So in most cases, you'd be using this while logged in to Azure CLI or Azure Powershell.
`,
	// Uncomment the following line if your bare application
	// has an action associated with it:
	// Run: func(cmd *cobra.Command, args []string) { },
}

func Execute() {
	err := rootCmd.Execute()
	if err != nil {
		os.Exit(1)
	}
}

func init() {
	// Here you will define your flags and configuration settings.
	// Cobra supports persistent flags, which, if defined here,
	// will be global for your application.

	// rootCmd.PersistentFlags().StringVar(&cfgFile, "config", "", "config file (default is $HOME/.AzureMetricAggregator.yaml)")

	// Cobra also supports local flags, which will only run
	// when this action is called directly.
	//rootCmd.Flags().BoolP("toggle", "t", false, "Help message for toggle")
}